<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.tangmonkmeat.mapper.CategoryMapper">
    <resultMap id="BaseResultMap" type="io.github.tangmonkmeat.model.Category">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="icon_url" jdbcType="VARCHAR" property="iconUrl"/>
        <result column="sort_order" jdbcType="INTEGER" property="sortOrder"/>
    </resultMap>


    <resultMap id="BaseResultParentMap" type="io.github.tangmonkmeat.model.CategoryMenu">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="icon_url" jdbcType="VARCHAR" property="iconUrl"/>
        <result column="sort_order" jdbcType="INTEGER" property="sortOrder"/>
        <association property="parent" javaType="io.github.tangmonkmeat.model.CategoryMenu"
                     select="selectParentCategoryMenu"
                     column="parent_id"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, parent_id, icon_url, sort_order
  </sql>
    <select id="selectByExample" parameterType="io.github.tangmonkmeat.model.CategoryExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from category
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="io.github.tangmonkmeat.model.CategoryExample">
        delete from category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="io.github.tangmonkmeat.model.Category">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into category (name, parent_id, icon_url,
        sort_order)
        values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{iconUrl,jdbcType=VARCHAR},
        #{sortOrder,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="io.github.tangmonkmeat.model.Category">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into category
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="iconUrl != null">
                icon_url,
            </if>
            <if test="sortOrder != null">
                sort_order,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                #{iconUrl,jdbcType=VARCHAR},
            </if>
            <if test="sortOrder != null">
                #{sortOrder,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="io.github.tangmonkmeat.model.CategoryExample"
            resultType="java.lang.Long">
        select count(*) from category
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>


    <select id="selectParentCategoryMenu" resultMap="BaseResultParentMap">
     select * from category where id=#{id}
  </select>
    <select id="selectAllMainCategory" resultMap="BaseResultMap">
      select id,`name`,sort_order from category where parent_id = 0 order by sort_order asc
    </select>
    <select id="selectAllSubcategory" resultMap="BaseResultMap">
        select id,`name`,icon_url,sort_order from category where parent_id = #{parentId} order by sort_order asc
    </select>

    <select id="selectBrotherCategory" resultMap="BaseResultMap">
      select id, `name` from category
      where parent_id = (select parent_id from category where id = #{id})
      order by sort_order asc
    </select>
    <select id="selectParentIdById" resultType="int">
        select parent_id from category where id=#{id}
    </select>


    <update id="updateByExampleSelective" parameterType="map">
        update category
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
            <if test="record.iconUrl != null">
                icon_url = #{record.iconUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.sortOrder != null">
                sort_order = #{record.sortOrder,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update category
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        parent_id = #{record.parentId,jdbcType=INTEGER},
        icon_url = #{record.iconUrl,jdbcType=VARCHAR},
        sort_order = #{record.sortOrder,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="io.github.tangmonkmeat.model.Category">
        update category
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                icon_url = #{iconUrl,jdbcType=VARCHAR},
            </if>
            <if test="sortOrder != null">
                sort_order = #{sortOrder,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="io.github.tangmonkmeat.model.Category">
    update category
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      icon_url = #{iconUrl,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>